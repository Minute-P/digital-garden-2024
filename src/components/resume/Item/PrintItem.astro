---
import ItemSeparator from './ItemSeparator.astro'

interface Props {
  title: string
  timeDescription: string
  description: string
  url: string
  inline?: boolean
  titleFontSize?: string
}

const { title, timeDescription, description, url, inline, titleFontSize } =
  Astro.props

const totalLength =
  (title?.length || 0) +
  (timeDescription?.length || 0) +
  (description?.length || 0)

const useInline = typeof inline === 'boolean' ? inline : totalLength <= 64
const titleClass = titleFontSize
  ? `text-${titleFontSize} font-[MetricHPEXS_Medium] font-medium`
  : 'text-md font-[MetricHPEXS_Medium] font-medium'
---

{
  useInline ? (
    <div class="flex items-center">
      <div class={`flex-shrink-0 ${titleClass}`}>{title}</div>
      {(timeDescription || description || url) && (
        <div>
          <div class="ml-2 flex-shrink-0 text-right text-sm">
            {description && (
              <span class="ml-2 border-l border-gray-300 pl-2 text-gray-500">
                {description}
              </span>
            )}
            {timeDescription && (
              <span class="ml-2 border-l border-gray-300 pl-2 text-gray-500">
                {timeDescription}
              </span>
            )}
          </div>
        </div>
      )}
      <ItemSeparator />
    </div>
  ) : (
    <div class="mb-2">
      <div class="flex items-center">
        <div class={titleClass}>{title}</div>
        <ItemSeparator />
      </div>
      {(description || timeDescription || url) && (
        <div class="mt-0 flex flex-row gap-2 text-sm text-gray-500">
          {description && <span>{description}</span>}
          {timeDescription && (
            <span class="border-l border-gray-300 pl-2">{timeDescription}</span>
          )}
        </div>
      )}
    </div>
  )
}
